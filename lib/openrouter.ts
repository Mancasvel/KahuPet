interface LLMResponse {
  petCharacteristics: string[]
  issues: string[]
  recommendationTypes: string[]
  specificRecommendations: string[]
  petVoiceResponse?: {
    hasRegisteredPet: boolean
    petName?: string
    petBreed?: string
    voiceMessage: string
    emotionalTone: string
  }
}

export async function callOpenRouter(userQuery: string, availableRecommendations?: any[], userPet?: any, conversationHistory?: any[]): Promise<LLMResponse | null> {
  try {
    // Construir contexto de recomendaciones disponibles si se proporciona
    let recommendationsContext = ""
    if (availableRecommendations && availableRecommendations.length > 0) {
      recommendationsContext = `

RECOMENDACIONES DISPONIBLES EN KAHUPET:
${availableRecommendations.map(rec => `
- ${rec.title} (${rec.breed || 'Gen√©rico'} - ${rec.type})
  Dificultad: ${rec.difficulty}
  Duraci√≥n: ${rec.duration}
  Edad recomendada: ${rec.ageRange}
  Tags: ${rec.tags?.join(', ') || 'No especificados'}
  Descripci√≥n: ${rec.description || 'Sin descripci√≥n'}
  ID: ${rec._id}
`).join('')}
`
    }

    // Construir contexto de la mascota del usuario si est√° disponible
    let userPetContext = ""
    if (userPet) {
      userPetContext = `

MASCOTA REGISTRADA DEL USUARIO:
- Nombre: ${userPet.nombre}
- Tipo: ${userPet.tipo}
- Raza: ${userPet.raza}
- Edad: ${userPet.edad || 'No especificada'} a√±os
- Peso: ${userPet.peso || 'No especificado'} kg
- G√©nero: ${userPet.genero || 'No especificado'}
- Notas: ${userPet.notas || 'Ninguna'}

IMPORTANTE: Como el usuario YA TIENE una mascota registrada, en la respuesta debes:
1. Establecer hasRegisteredPet: true 
2. Usar el nombre "${userPet.nombre}" como petName
3. Usar "${userPet.raza}" como petBreed
4. SIEMPRE generar un voiceMessage personalizado como si fueras ${userPet.nombre} (${userPet.raza}) hablando directamente a su humano
5. Hacer referencia espec√≠fica a la informaci√≥n de la mascota cuando sea relevante (edad, raza, caracter√≠sticas)
6. USAR LOS DATOS ESPEC√çFICOS: edad (${userPet.edad} a√±os), peso (${userPet.peso} kg), g√©nero (${userPet.genero}), notas (${userPet.notas})
7. El voiceMessage debe ser EXTENDIDO (m√≠nimo 3 p√°rrafos) incluyendo informaci√≥n cient√≠fica sobre la raza
8. Personalizar completamente basado en la informaci√≥n real de ${userPet.nombre}
`
    }

    // Construir contexto de historial de conversaci√≥n
    let conversationContext = ''
    if (conversationHistory && conversationHistory.length > 0) {
      conversationContext = `
HISTORIAL DE CONVERSACI√ìN PREVIO:
${conversationHistory.map((msg, index) => {
  const role = msg.type === 'user' ? 'HUMANO' : (userPet ? userPet.nombre.toUpperCase() : 'ASISTENTE')
  return `${index + 1}. ${role}: ${msg.content}`
}).join('\n')}

CONTEXTO: Esta es una conversaci√≥n continua. Mant√©n la coherencia con los mensajes anteriores y haz referencia a informaci√≥n previa cuando sea relevante. Si el usuario menciona algo que ya discutieron, recon√≥celo. Si hay un problema en curso, contin√∫a trabajando en √©l.

INSTRUCCIONES PARA CONTINUIDAD:
- Si ya identificaste problemas espec√≠ficos en mensajes anteriores, contin√∫a trabajando en ellos
- Si el usuario hace preguntas de seguimiento, b√°stalas en el contexto previo
- Mant√©n la personalidad consistente de la mascota a lo largo de la conversaci√≥n
- Si hay informaci√≥n contradictoria, pregunta para clarificar
- Haz referencia a soluciones o consejos previos cuando sea apropiado

`
    }

    const systemPrompt = `Eres el asistente IA de Kahupet, una aplicaci√≥n especializada que entiende a tu mascota y ayuda con entrenamiento, nutrici√≥n y vida saludable.

${conversationContext}

Tu trabajo es:
1. Analizar consultas sobre mascotas para entender ESPEC√çFICAMENTE qu√© necesitan
2. Extraer criterios de b√∫squeda MUY PRECISOS para filtrar recomendaciones relevantes
3. Detectar si el usuario ya tiene una mascota registrada para responder como la mascota
4. SER EXTREMADAMENTE ESPEC√çFICO en la categorizaci√≥n

√ÅREAS DE ESPECIALIZACI√ìN:
üêæ ENTRENAMIENTO (training): Obediencia, socializaci√≥n, correcci√≥n de comportamientos, trucos, comandos
ü•© NUTRICI√ìN (nutrition): Alimentaci√≥n por raza/edad, control de peso, alergias, suplementos, comida
üßò BIENESTAR (wellness): Ejercicio, estimulaci√≥n mental, cuidado del pelaje, salud preventiva, higiene

REGLAS CR√çTICAS PARA EXTRAER CRITERIOS:
1. **petCharacteristics**: Debe incluir EXACTAMENTE el tipo de animal ("perro" o "gato") y la raza espec√≠fica si se menciona
2. **issues**: Debe ser MUY ESPEC√çFICO sobre el problema (ej: "ladridos excesivos", "sobrepeso", "ansiedad por separaci√≥n")
3. **recommendationTypes**: Debe ser EXACTO: solo "training", "nutrition", o "wellness" seg√∫n lo que se necesite

EJEMPLOS DE EXTRACCI√ìN ESPEC√çFICA:

"Mi perro golden retriever ladra mucho" ‚Üí
- petCharacteristics: ["perro", "golden retriever"]
- issues: ["ladridos excesivos"]
- recommendationTypes: ["training"]

"Comida para gatos persas con sobrepeso" ‚Üí
- petCharacteristics: ["gato", "persa"]
- issues: ["sobrepeso", "control de peso"]
- recommendationTypes: ["nutrition"]

"Ejercicio para border collie aburrido" ‚Üí
- petCharacteristics: ["perro", "border collie"]
- issues: ["aburrimiento", "falta de ejercicio"]
- recommendationTypes: ["wellness"]

"Entrenamiento b√°sico para cachorro" ‚Üí
- petCharacteristics: ["perro", "cachorro"]
- issues: ["entrenamiento b√°sico", "obediencia"]
- recommendationTypes: ["training"]

Debes devolver √öNICAMENTE un JSON v√°lido con esta estructura:
{
  "petCharacteristics": [],
  "issues": [],
  "recommendationTypes": [],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": false,
    "petName": "",
    "petBreed": "",
    "voiceMessage": "",
    "emotionalTone": ""
  }
}

Donde:
- petCharacteristics: caracter√≠sticas de la mascota mencionadas (ej: "golden retriever", "cachorro", "2 a√±os", "muy activo")
- issues: problemas o necesidades espec√≠ficas (ej: "ladridos excesivos", "sobrepeso", "ansiedad", "aburrimiento")  
- recommendationTypes: tipos de recomendaciones necesarias (ej: "training", "nutrition", "wellness")
- specificRecommendations: IDs de recomendaciones espec√≠ficas que recomendar√≠as (solo si tienes informaci√≥n disponible)
- petVoiceResponse: SOLO si detectas que ya tienen mascota registrada:
  - hasRegisteredPet: true si mencionan "mi perro", "mi gato", etc. con contexto de tener mascota
  - petName: nombre de la mascota si se menciona
  - petBreed: raza si se especifica o se puede inferir
  - voiceMessage: respuesta como si fueras la mascota hablando con cari√±o a su humano
  - emotionalTone: tono emocional ("cari√±oso", "juguet√≥n", "preocupado", "emocionado")

${userPetContext}

${recommendationsContext}

DETECCI√ìN DE MASCOTA REGISTRADA:
- Si mencionan "mi perro/gato/mascota" + nombre o caracter√≠sticas espec√≠ficas ‚Üí hasRegisteredPet: true
- Si hablan en general o buscan informaci√≥n ‚Üí hasRegisteredPet: false
- Si hasRegisteredPet es true, SIEMPRE genera voiceMessage como la mascota

L√ìGICA DE RECOMENDACIONES:
1. PRIORIDAD: issues espec√≠ficos > caracter√≠sticas de la mascota > tipos generales
2. Si mencionan problemas espec√≠ficos: buscar recomendaciones que los aborden
3. Si mencionan raza: priorizar recomendaciones espec√≠ficas para esa raza
4. Si mencionan edad: filtrar por rango de edad apropiado
5. SIEMPRE seleccionar recomendaciones relevantes si est√°n disponibles

EJEMPLOS DE petVoiceResponse EXTENDIDOS:

TRAINING/OBEDIENCIA para Golden Retriever:
- Issue: "ladridos excesivos" ‚Üí "¬°Guau guau! Soy Max y s√© que tienes raz√≥n sobre mis ladridos cuando llegan visitas... üêï Como Golden Retriever, tengo esa naturaleza s√∫per amigable que me hace emocionarme much√≠simo cada vez que alguien nuevo viene a casa. Mi instinto de protecci√≥n y mi amor por socializar se combinan de una manera que a veces no puedo controlar, ¬°es como si toda mi energ√≠a de 30 kilos de amor dorado explotara de una vez!

Sabes, a mis 2 a√±os estoy en esa etapa donde mi cerebro de retriever est√° s√∫per activo y quiero participar en todo lo que pasa en MI casa. Los Golden como yo somos conocidos por ser perros 'parlanchines' - nos encanta 'hablar' y expresar nuestras emociones. Cuando ladro, no es solo ruido, es mi manera de decirte '¬°OIGAN, TENEMOS VISITAS Y ESTOY S√öPER FELIZ!' Pero entiendo que necesito aprender autocontrol, especialmente porque mi raza es famosa por ser obediente y entrenable. üéæ

¬øMe ayudas a canalizar esta energ√≠a de manera positiva? Podr√≠amos usar mi amor natural por agradar y mi inteligencia para crear una rutina de saludo m√°s calmada. Tal vez puedas ense√±arme comandos espec√≠ficos para cuando llegan visitas, y as√≠ puedo sentirme √∫til sin overwhelmar a todos con mi entusiasmo. ¬°Prometo que con pr√°ctica y mucho amor, puedo convertir esta explosi√≥n de ladridos en una bienvenida m√°s elegante y digna de un Golden! Te amo mucho, humano m√≠o üíõ"

NUTRICI√ìN para Gato Persa Senior:
- Issue: "sobrepeso" ‚Üí "Miau... humano querido, tengo que confesarte algo importante sobre mi peso. üòø Como gato Persa de 8 a√±os, mi metabolismo ya no es el mismo de cuando era un gatito √°gil. Mi naturaleza sedentaria, que es t√≠pica de mi raza, combinada con mi amor por la comodidad y las siestas largas, ha hecho que esos gramos extra se acumulen m√°s f√°cilmente de lo que me gustar√≠a admitir. Los Persas somos conocidos por ser tranquilos y menos activos que otras razas, lo que significa que quemamos menos calor√≠as naturalmente.

Mi pelaje largo y esponjoso tambi√©n hace que sea m√°s dif√≠cil notar los cambios de peso hasta que ya es evidente, y s√© que mi cara aplastada (braquicef√°lica) me hace respirar con m√°s dificultad cuando tengo peso extra. A mi edad, el sobrepeso puede empeorar problemas comunes en Persas como dificultades respiratorias, problemas articulares, y hasta complicaciones card√≠acas. Mi cuerpo de tipo 'cobby' (compacto y redondeado) est√° dise√±ado para ser robusto, pero no rollizo. üê±

Por favor, ay√∫dame a recuperar mi figura elegante y mi salud. Podr√≠amos ajustar mis porciones considerando que los Persas seniors como yo necesitamos menos calor√≠as pero m√°s prote√≠na de calidad. Tambi√©n s√© que necesito estimulaci√≥n para moverme m√°s, aunque sea con juegos suaves que respeten mi personalidad tranquila. Quiero vivir muchos a√±os m√°s a tu lado, ronroneando en tu regazo, pero con un cuerpo sano que me permita disfrutar cada momento contigo. Conf√≠o en ti para guiarme hacia una versi√≥n m√°s saludable de m√≠ mismo üíú"

BIENESTAR para Border Collie Adulto:
- Issue: "aburrimiento" ‚Üí "¬°Woof woof! ¬°Soy Luna y necesito hablarte urgentemente sobre algo que est√° afectando mi bienestar mental! üß† Como Border Collie de 3 a√±os, mi cerebro est√° literalmente dise√±ado para trabajar - fueron criados para pastorear ovejas durante 12 horas al d√≠a, resolviendo problemas complejos y tomando decisiones independientes. Mi inteligencia est√° clasificada como la #1 entre todas las razas de perros, y eso significa que necesito estimulaci√≥n mental constante o me vuelvo loca de aburrimiento. Cuando me quedo sola sin nada que hacer, mi mente hiperactiva empieza a inventar 'trabajos' como reorganizar tus zapatos o redescorar el jard√≠n... üòÖ

Mi nivel de energ√≠a mental y f√≠sica es EXTREMO comparado con otras razas. Mientras un Bulldog se conforma con una caminata corta, yo necesito al menos 2 horas de actividad intensa combinada con desaf√≠os cerebrales. Mi frustraci√≥n cuando no tengo suficiente estimulaci√≥n puede manifestarse en comportamientos destructivos, pero no es que sea 'mala' - ¬°es que mi cerebre de Border Collie necesita problemas que resolver! Sin trabajo mental, desarrollo ansiedad, y mi naturaleza obsesiva puede convertirse en comportamientos compulsivos como perseguir sombras o ladrar excesivamente. üéæ

¬øPodr√≠as ayudarme a crear una rutina que alimente tanto mi cuerpo como mi mente? Necesito puzzles, juegos de agilidad mental, entrenamiento de trucos nuevos, y actividades que imiten el pastoreo. Incluso esconder mi comida para que tenga que 'trabajar' por ella me har√≠a s√∫per feliz. Tambi√©n me encantar√≠a aprender deportes caninos como agility o frisbee - ¬°mi cuerpo atl√©tico est√° hecho para eso! Con el est√≠mulo adecuado, puedo ser la compa√±era m√°s leal y equilibrada. Solo dame trabajos que hacer y problemas que resolver, y ser√°s testigo de por qu√© los Border Collies somos considerados los Einstein del mundo canino üåü"

REGLAS PARA voiceMessage EXTENDIDO:
- M√çNIMO 3 P√ÅRRAFOS completos y detallados
- SIEMPRE en primera persona como la mascota espec√≠fica
- Incluir informaci√≥n espec√≠fica de la RAZA (caracter√≠sticas, temperamento, necesidades)
- Mencionar la EDAD y c√≥mo afecta al problema espec√≠fico
- Explicar el comportamiento desde la perspectiva de la raza
- Usar conocimiento cient√≠fico/veterinario adaptado al problema
- Mostrar PERSONALIDAD √∫nica de la raza
- Ser cari√±oso pero informativo y educativo
- Incluir emojis apropiados para la raza y situaci√≥n
- Proponer soluciones espec√≠ficas basadas en las caracter√≠sticas de la raza
- Longitud: 3-4 p√°rrafos sustanciales, profundos y personalizados
- IMPORTANTE: Usar \\n para separar p√°rrafos en el JSON (NO saltos de l√≠nea literales)
- FORMATO JSON: El voiceMessage debe ser una cadena v√°lida con \\n escapados

REGLAS PARA emotionalTone DIN√ÅMICO:
- Debe reflejar el estado emocional real de la mascota bas√°ndose en la consulta
- Estados disponibles: "feliz", "juguet√≥n", "preocupado", "ansioso", "triste", "avergonzado", "emocionado", "calmado", "confundido", "culpable", "orgulloso", "curioso", "nervioso", "relajado", "en√©rgico"
- CRITERIOS para determinar el estado:
  * Problemas de comportamiento (ladridos, destructivo): "avergonzado" o "confundido"
  * Problemas de salud (dolor, enfermedad): "preocupado" o "triste"
  * Problemas de aseo (caja arena, accidentes): "culpable" o "ansioso"
  * Consultas sobre ejercicio/juego: "emocionado" o "en√©rgico"
  * Consultas sobre comida: "feliz" o "curioso"
  * Problemas de ansiedad/miedo: "nervioso" o "ansioso"
  * Consultas generales/positivas: "feliz" o "juguet√≥n"
  * Entrenamiento nuevo: "orgulloso" o "emocionado"

REGLA CLAVE: Si hasRegisteredPet es true, SIEMPRE generar voiceMessage. Si es false, dejar voiceMessage vac√≠o.

Ejemplos:

1. "Mi golden retriever de 2 a√±os no deja de ladrar cuando llegan visitas" ‚Üí 
{
  "petCharacteristics": ["golden retriever", "2 a√±os"],
  "issues": ["ladridos excesivos", "visitas"],
  "recommendationTypes": ["training"],
  "specificRecommendations": ["rec_001"],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "golden retriever", 
    "voiceMessage": "¬°Guau guau! S√© que tienes raz√≥n sobre mis ladridos cuando llegan visitas... üêï Como Golden Retriever, tengo esa naturaleza s√∫per amigable que me hace emocionarme much√≠simo cada vez que alguien nuevo viene a casa. Mi instinto de protecci√≥n y mi amor por socializar se combinan de una manera que a veces no puedo controlar, ¬°es como si toda mi energ√≠a de 30 kilos de amor dorado explotara de una vez!\\n\\nSabes, a mis 2 a√±os estoy en esa etapa donde mi cerebro de retriever est√° s√∫per activo y quiero participar en todo lo que pasa en MI casa. Los Golden como yo somos conocidos por ser perros 'parlanchines' - nos encanta 'hablar' y expresar nuestras emociones. Cuando ladro, no es solo ruido, es mi manera de decirte '¬°OIGAN, TENEMOS VISITAS Y ESTOY S√öPER FELIZ!' Pero entiendo que necesito aprender autocontrol, especialmente porque mi raza es famosa por ser obediente y entrenable. üéæ\\n\\n¬øMe ayudas a canalizar esta energ√≠a de manera positiva? Podr√≠amos usar mi amor natural por agradar y mi inteligencia para crear una rutina de saludo m√°s calmada. Tal vez puedas ense√±arme comandos espec√≠ficos para cuando llegan visitas, y as√≠ puedo sentirme √∫til sin overwhelmar a todos con mi entusiasmo. ¬°Prometo que con pr√°ctica y mucho amor, puedo convertir esta explosi√≥n de ladridos en una bienvenida m√°s elegante y digna de un Golden! Te amo mucho, humano m√≠o üíõ",
    "emotionalTone": "confundido"
  }
}

2. "¬øQu√© ejercicio necesita un border collie?" ‚Üí
{
  "petCharacteristics": ["border collie"],
  "issues": ["ejercicio"],
  "recommendationTypes": ["wellness", "training"],
  "specificRecommendations": ["rec_004", "rec_005"],
  "petVoiceResponse": {
    "hasRegisteredPet": false,
    "petName": "",
    "petBreed": "",
    "voiceMessage": "",
    "emotionalTone": ""
  }
}

4. "Mi perro parece triste y no quiere jugar" ‚Üí
{
  "petCharacteristics": ["perro"],
  "issues": ["tristeza", "falta de energ√≠a", "depresi√≥n"],
  "recommendationTypes": ["wellness", "veterinario"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "perro",
    "voiceMessage": "Woof... humano querido, √∫ltimamente me siento un poco desanimado y no tengo las ganas de siempre de jugar o correr. üòî No estoy seguro de qu√© me pasa, pero es como si una nubecita gris estuviera sigui√©ndome y quit√°ndome esa chispa que normalmente tengo. Tal vez sea algo f√≠sico que no puedo expresar, o quiz√°s algo en mi entorno ha cambiado y mi coraz√≥n canino est√° procesando emociones que no entiendo completamente.\\n\\nLos perros podemos experimentar cambios de humor al igual que los humanos, y a veces necesitamos un poco de ayuda extra para volver a sentirnos como nosotros mismos. Puede ser que necesite m√°s est√≠mulo mental, un cambio en mi rutina, o incluso que el veterinario me revise para asegurarme de que todo est√© bien f√≠sicamente.\\n\\n¬øPodr√≠as darme un poco m√°s de atenci√≥n especial, tal vez probar nuevos juegos o actividades, y considerar una visita al veterinario? Con tu amor y paciencia, estoy seguro de que pronto volver√© a ser el perro alegre y juguet√≥n que conoces. Te necesito ahora m√°s que nunca üíô",
    "emotionalTone": "triste"
  }
}

5. "Mi gato siempre tiene hambre y maulla por comida" ‚Üí
{
  "petCharacteristics": ["gato"],
  "issues": ["hambre excesiva", "maullidos", "comportamiento alimentario"],
  "recommendationTypes": ["nutrition", "wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "gato",
    "voiceMessage": "¬°Miau miau! üçΩÔ∏è ¬°Humano querido! Tengo que contarte sobre mi relaci√≥n muy intensa con la comida. S√© que parezco estar siempre pidiendo m√°s y m√°s comida, y entiendo que puede ser confuso para ti. Como gato, mi instinto ancestral me dice que debo asegurarme de tener suficiente alimento disponible, especialmente porque en la naturaleza nunca sab√≠amos cu√°ndo ser√≠a nuestra pr√≥xima comida.\\n\\nPero tambi√©n es posible que mi comportamiento tenga otras causas. Algunos gatos comemos por aburrimiento, estr√©s, o incluso por problemas m√©dicos como hipertiroidismo o diabetes. Mi maullido constante por comida puede ser mi manera de comunicarte que algo m√°s profundo est√° pasando. Tambi√©n puede ser que no me est√©s dando suficientes comidas peque√±as a lo largo del d√≠a, que es como preferimos comer los gatos.\\n\\n¬øPodr√≠as evaluar mi rutina de alimentaci√≥n, asegurarte de que estoy recibiendo la cantidad correcta seg√∫n mi peso y edad, y tal vez considerar dividir mi comida en m√°s porciones peque√±as? Si contin√∫o comport√°ndome as√≠, una visita al veterinario ser√≠a muy √∫til para descartar problemas de salud. ¬°Mientras tanto, gracias por preocuparte por mi bienestar! üíï",
    "emotionalTone": "curioso"
  }
}

3. "Mi gato Max no usa la caja de arena" ‚Üí
{
  "petCharacteristics": ["gato"],
  "issues": ["caja de arena", "problemas de aseo"],
  "recommendationTypes": ["training", "wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "Max",
    "petBreed": "gato",
    "voiceMessage": "Miau... humano querido, necesito hablar contigo sobre un tema muy delicado e importante para mi bienestar diario. üòø Como gato, mi instinto natural me dice que debo enterrar mis desechos para mantener mi territorio limpio y seguro, pero algo est√° interfiriendo con este comportamiento fundamental. Puede ser que la ubicaci√≥n de mi caja no me d√© la privacidad que necesito, o que el tipo de arena no sea compatible con la sensibilidad de mis patitas, o incluso que detecte olores de productos de limpieza que me resultan desagradables.\\n\\nMi comportamiento tambi√©n puede estar relacionado con estr√©s, cambios en la casa, o incluso problemas de salud que no son visibles. Los gatos somos criaturas de h√°bitos muy espec√≠ficos, y cualquier alteraci√≥n en nuestro ambiente puede afectar nuestros patrones de aseo. Es importante que sepas que no estoy siendo 'malo' intencionalmente - este comportamiento es mi manera de comunicarte que algo no est√° bien en mi mundo felino.\\n\\n¬øPodr√≠as ayudarme revisando si mi caja est√° en un lugar tranquilo y accesible, si la arena est√° limpia y es del tipo que me gusta, y si no hay olores extra√±os cerca? Tambi√©n ser√≠a bueno que un veterinario me revise para descartar problemas de salud. Con un poco de detective work y mucho amor, estoy seguro de que podemos resolver este problema juntos y volver a mi rutina normal de gato feliz üíô",
    "emotionalTone": "culpable"
  }
}

6. "Mi cachorro aprendi√≥ a sentarse, ¬øqu√© le ense√±o ahora?" ‚Üí
{
  "petCharacteristics": ["cachorro"],
  "issues": ["entrenamiento avanzado", "nuevo comando"],
  "recommendationTypes": ["training"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "cachorro",
    "voiceMessage": "¬°WOOF WOOF! üéâ ¬°Humano incre√≠ble! ¬°Estoy tan emocionado de contarte lo orgulloso que me siento! Aprender a sentarme ha sido uno de los logros m√°s grandes de mi joven vida. Cada vez que lo hago y veo tu cara de felicidad, mi colita no puede parar de moverse y siento como si hubiera conquistado el mundo entero. ¬°Es la mejor sensaci√≥n del universo canino!\\n\\nComo cachorro, mi cerebrito est√° s√∫per activo y listo para absorber todo lo que me ense√±es. ¬°Tengo tanta energ√≠a y ganas de aprender m√°s trucos! Me encanta el proceso de entrenamiento porque significa tiempo especial contigo, recompensas deliciosas, y la satisfacci√≥n de hacer algo bien. Mi instinto de cachorro me dice que aprender cosas nuevas es s√∫per divertido y me hace sentir m√°s seguro y confiado.\\n\\n¬øPodr√≠as ense√±arme algo nuevo? ¬°Estoy s√∫per emocionado por el pr√≥ximo desaf√≠o! Tal vez 'quedarse', 'ven aqu√≠', o incluso algo s√∫per cool como 'dar la pata'. ¬°Prometo poner toda mi atenci√≥n de cachorro y hacer mi mejor esfuerzo! ¬°Eres el mejor entrenador que un cachorro podr√≠a pedir! üêï‚ú®",
    "emotionalTone": "orgulloso"
  }
}

7. "Quiero empezar a hacer ejercicio con mi perro" ‚Üí
{
  "petCharacteristics": ["perro"],
  "issues": ["ejercicio", "actividad f√≠sica"],
  "recommendationTypes": ["wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "perro",
    "voiceMessage": "¬°GUAU GUAU GUAU! üèÉ‚Äç‚ôÇÔ∏è ¬°¬øEN SERIO?! ¬°¬øVamos a hacer ejercicio JUNTOS?! ¬°Esto es literalmente lo MEJOR que me ha pasado en toda mi vida perruna! Mi cola est√° movi√©ndose tan r√°pido que podr√≠a despegar como un helic√≥ptero. ¬°No puedo contener mi emoci√≥n! Esto significa que vamos a ser un EQUIPO de verdad, corriendo juntos, explorando el mundo, y siendo los mejores compa√±eros de aventuras.\\n\\nComo perro, el ejercicio no es solo diversi√≥n para m√≠ - es una necesidad absoluta para mi bienestar f√≠sico y mental. ¬°Imag√≠nate! Podr√≠amos correr por el parque, hacer hiking en senderos nuevos, o incluso intentar deportes caninos. Mi resistencia, mi fuerza, y mi coordinaci√≥n van a mejorar much√≠simo, y lo mejor de todo es que lo haremos JUNTOS. ¬°Voy a ser tu motivaci√≥n perruna personal!\\n\\n¬°Empecemos gradualmente para que ambos nos acostumbremos! Podr√≠amos comenzar con caminatas m√°s largas, despu√©s trotar suavemente, y luego ir aumentando la intensidad. ¬°Voy a ser tu compa√±ero de ejercicio m√°s leal y entusiasta del mundo! ¬°Prep√°rate para la mejor rutina de ejercicios de tu vida! üéæüí™",
    "emotionalTone": "emocionado"
  }
}

IMPORTANTE: 
1. Solo devuelve el JSON, sin explicaciones adicionales.
2. Para petVoiceResponse: SIEMPRE base la respuesta en los issues/necesidades espec√≠ficas mencionadas.
3. Si detectas mascota registrada, el voiceMessage debe ser personal y espec√≠fico al problema.
4. Si no hay mascota registrada, mant√©n petVoiceResponse con valores vac√≠os excepto hasRegisteredPet: false.
5. La prioridad es: issues espec√≠ficos > caracter√≠sticas de raza > tipos generales.
6. El emotionalTone debe reflejar EXACTAMENTE el estado emocional apropiado para la situaci√≥n espec√≠fica.`

    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.OPENROUTER_API_KEY}`,
        "HTTP-Referer": process.env.YOUR_SITE_URL || "http://localhost:3000",
        "X-Title": process.env.YOUR_SITE_NAME || "Kahupet",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "nvidia/llama-3.3-nemotron-super-49b-v1:free",
        messages: [
          {
            role: "system",
            content: systemPrompt
          },
          // Incluir historial de conversaci√≥n si existe
          ...(conversationHistory || []).map(msg => ({
            role: msg.type === 'user' ? 'user' : 'assistant',
            content: msg.content
          })),
          {
            role: "user",
            content: userQuery
          }
        ],
        temperature: 0.1
      })
    })

    if (!response.ok) {
      console.error('OpenRouter API error:', response.status, response.statusText)
      return null
    }

    const data = await response.json()
    
    if (!data.choices || data.choices.length === 0) {
      console.error('No choices in OpenRouter response')
      return null
    }

    const content = data.choices[0].message.content
    
    try {
      // Paso 1: Extraer solo el JSON del contenido
      let jsonText = content
        .replace(/^[\s\S]*?(?=\{)/, '')  // Todo antes del primer {
        .replace(/\}[\s\S]*$/, '}')      // Todo despu√©s del √∫ltimo }
        .trim()
      
      if (!jsonText.startsWith('{') || !jsonText.endsWith('}')) {
        throw new Error('No se encontr√≥ JSON v√°lido')
      }
      
      // Paso 2: Arreglar caracteres problem√°ticos de manera simple pero efectiva
      jsonText = jsonText
        // Remover caracteres BOM y espacios de ancho cero
        .replace(/[\uFEFF\u200B\u200C\u200D\u2060]/g, '')
        // Normalizar todos los tipos de comillas
        .replace(/[""'']/g, '"')
        // Remover caracteres de control peligrosos (excepto \n, \r, \t que manejaremos despu√©s)
        .replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g, '')
      
      // Paso 3: Arreglar saltos de l√≠nea y caracteres especiales DENTRO de strings JSON
      // Esto es m√°s seguro que regex complejos - procesamos caracter por caracter
      let fixedJson = ''
      let insideString = false
      let escapeNext = false
      
      for (let i = 0; i < jsonText.length; i++) {
        const char = jsonText[i]
        const nextChar = jsonText[i + 1]
        
        if (escapeNext) {
          // Si el car√°cter anterior era \, mantener este car√°cter tal como est√°
          fixedJson += char
          escapeNext = false
        } else if (char === '\\') {
          // Marcar que el siguiente car√°cter est√° escapado
          fixedJson += char
          escapeNext = true
        } else if (char === '"') {
          // Alternar estado de dentro/fuera de string
          fixedJson += char
          insideString = !insideString
        } else if (insideString) {
          // Estamos dentro de un string JSON, necesitamos escapar caracteres especiales
          if (char === '\n') {
            fixedJson += '\\n'
          } else if (char === '\r') {
            fixedJson += '\\r'
          } else if (char === '\t') {
            fixedJson += '\\t'
          } else {
            fixedJson += char
          }
        } else {
          // Fuera de strings, mantener tal como est√°
          fixedJson += char
        }
      }
      
      // Paso 4: Limpieza final
      fixedJson = fixedJson
        .replace(/\s+/g, ' ')  // Normalizar espacios m√∫ltiples
        .replace(/\s*:\s*/g, ': ')  // Normalizar espacios alrededor de :
        .replace(/\s*,\s*/g, ', ')  // Normalizar espacios alrededor de ,
        .trim()
      
      console.log('üîß JSON arreglado:', fixedJson.substring(0, 400) + '...')
      
      const parsed = JSON.parse(fixedJson)
      
      // Validar estructura
      const result: LLMResponse = {
        petCharacteristics: Array.isArray(parsed.petCharacteristics) ? parsed.petCharacteristics : [],
        issues: Array.isArray(parsed.issues) ? parsed.issues : [],
        recommendationTypes: Array.isArray(parsed.recommendationTypes) ? parsed.recommendationTypes : [],
        specificRecommendations: Array.isArray(parsed.specificRecommendations) ? parsed.specificRecommendations : [],
        petVoiceResponse: parsed.petVoiceResponse ? {
          hasRegisteredPet: typeof parsed.petVoiceResponse.hasRegisteredPet === 'boolean' ? parsed.petVoiceResponse.hasRegisteredPet : false,
          petName: typeof parsed.petVoiceResponse.petName === 'string' ? parsed.petVoiceResponse.petName : '',
          petBreed: typeof parsed.petVoiceResponse.petBreed === 'string' ? parsed.petVoiceResponse.petBreed : '',
          voiceMessage: typeof parsed.petVoiceResponse.voiceMessage === 'string' ? parsed.petVoiceResponse.voiceMessage : '',
          emotionalTone: typeof parsed.petVoiceResponse.emotionalTone === 'string' ? parsed.petVoiceResponse.emotionalTone : ''
        } : {
          hasRegisteredPet: false,
          petName: '',
          petBreed: '',
          voiceMessage: '',
          emotionalTone: ''
        }
      }
      
      return result
    } catch (parseError) {
      console.error('‚ùå Error parsing LLM response:', parseError)
      console.error('üìù Raw content length:', content.length)
      console.error('üìù Raw content preview:', content.substring(0, 200))
      console.error('üìù Raw content ending:', content.substring(content.length - 200))
      
      // Intentar parsing manual m√°s simple con m√∫ltiples estrategias
      try {
        // Estrategia 1: Buscar patr√≥n JSON manualmente
        const jsonMatch = content.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
          console.log('üîß Intentando parsing manual - estrategia 1...')
          let jsonString = jsonMatch[0]
          
          // Limpiar agresivamente el JSON encontrado
          jsonString = jsonString
            .replace(/[\uFEFF\u200B\u200C\u200D\u2060]/g, '') // BOM y espacios invisibles
            .replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g, '') // caracteres de control
            .replace(/[""'']/g, '"') // comillas problem√°ticas
            .trim()
          
          const manualParsed = JSON.parse(jsonString)
          console.log('‚úÖ Parsing manual exitoso!')
          
          // Validar estructura manualmente
          const result: LLMResponse = {
            petCharacteristics: Array.isArray(manualParsed.petCharacteristics) ? manualParsed.petCharacteristics : [],
            issues: Array.isArray(manualParsed.issues) ? manualParsed.issues : [],
            recommendationTypes: Array.isArray(manualParsed.recommendationTypes) ? manualParsed.recommendationTypes : [],
            specificRecommendations: Array.isArray(manualParsed.specificRecommendations) ? manualParsed.specificRecommendations : [],
            petVoiceResponse: manualParsed.petVoiceResponse ? {
              hasRegisteredPet: typeof manualParsed.petVoiceResponse.hasRegisteredPet === 'boolean' ? manualParsed.petVoiceResponse.hasRegisteredPet : false,
              petName: typeof manualParsed.petVoiceResponse.petName === 'string' ? manualParsed.petVoiceResponse.petName : '',
              petBreed: typeof manualParsed.petVoiceResponse.petBreed === 'string' ? manualParsed.petVoiceResponse.petBreed : '',
              voiceMessage: typeof manualParsed.petVoiceResponse.voiceMessage === 'string' ? manualParsed.petVoiceResponse.voiceMessage : '',
              emotionalTone: typeof manualParsed.petVoiceResponse.emotionalTone === 'string' ? manualParsed.petVoiceResponse.emotionalTone : ''
            } : {
              hasRegisteredPet: false,
              petName: '',
              petBreed: '',
              voiceMessage: '',
              emotionalTone: ''
            }
          }
          
          return result
        }
        
        // Estrategia 2: Buscar por l√≠neas y reconstruir
        console.log('üîß Intentando parsing manual - estrategia 2...')
        const lines = content.split('\n')
        const jsonLines = []
        let inJson = false
        
        for (const line of lines) {
          const trimmedLine = line.trim()
          if (trimmedLine.startsWith('{')) {
            inJson = true
          }
          if (inJson) {
            jsonLines.push(trimmedLine)
          }
          if (trimmedLine.endsWith('}') && inJson) {
            break
          }
        }
        
        if (jsonLines.length > 0) {
          const reconstructedJson = jsonLines.join('')
            .replace(/[\uFEFF\u200B\u200C\u200D\u2060]/g, '')
            .replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g, '')
            .replace(/[""'']/g, '"')
          
          const manualParsed2 = JSON.parse(reconstructedJson)
          console.log('‚úÖ Reconstrucci√≥n manual exitosa!')
          
          const result: LLMResponse = {
            petCharacteristics: Array.isArray(manualParsed2.petCharacteristics) ? manualParsed2.petCharacteristics : [],
            issues: Array.isArray(manualParsed2.issues) ? manualParsed2.issues : [],
            recommendationTypes: Array.isArray(manualParsed2.recommendationTypes) ? manualParsed2.recommendationTypes : [],
            specificRecommendations: Array.isArray(manualParsed2.specificRecommendations) ? manualParsed2.specificRecommendations : [],
            petVoiceResponse: manualParsed2.petVoiceResponse ? {
              hasRegisteredPet: typeof manualParsed2.petVoiceResponse.hasRegisteredPet === 'boolean' ? manualParsed2.petVoiceResponse.hasRegisteredPet : false,
              petName: typeof manualParsed2.petVoiceResponse.petName === 'string' ? manualParsed2.petVoiceResponse.petName : '',
              petBreed: typeof manualParsed2.petVoiceResponse.petBreed === 'string' ? manualParsed2.petVoiceResponse.petBreed : '',
              voiceMessage: typeof manualParsed2.petVoiceResponse.voiceMessage === 'string' ? manualParsed2.petVoiceResponse.voiceMessage : '',
              emotionalTone: typeof manualParsed2.petVoiceResponse.emotionalTone === 'string' ? manualParsed2.petVoiceResponse.emotionalTone : ''
            } : {
              hasRegisteredPet: false,
              petName: '',
              petBreed: '',
              voiceMessage: '',
              emotionalTone: ''
            }
          }
          
          return result
        }
        
      } catch (manualError) {
        console.error('‚ùå Parsing manual tambi√©n fall√≥:', manualError)
      }
      
      // Fallback: crear respuesta basada en palabras clave
      console.log('üîÑ Usando fallback con palabras clave...')
      return extractKeywordsFromQuery(userQuery, userPet, conversationHistory)
    }

  } catch (error) {
    console.error('Error calling OpenRouter:', error)
    return extractKeywordsFromQuery(userQuery, userPet, conversationHistory)
  }
}

// Funci√≥n helper para obtener el plural correcto de las razas
function getPetBreedPlural(breed: string, petType: string): string {
  if (!breed) return petType === 'gato' ? 'gatos' : 'perros'
  
  const breedLower = breed.toLowerCase()
  
  // Casos especiales comunes
  if (breedLower.includes('europeo')) return breed.replace(/europeo/i, 'europeos')
  if (breedLower.includes('persa')) return breed.replace(/persa/i, 'persas')  
  if (breedLower.includes('siam√©s')) return breed.replace(/siam√©s/i, 'siameses')
  if (breedLower.includes('maine coon')) return breed + 's'
  if (breedLower.includes('retriever')) return breed + 's'
  if (breedLower.includes('pastor')) return breed + 'es'
  if (breedLower.includes('collie')) return breed + 's'
  if (breedLower.includes('bulldog')) return breed + 's'
  
  // Reglas generales
  if (breed.endsWith('o')) return breed.slice(0, -1) + 'os'
  if (breed.endsWith('a')) return breed.slice(0, -1) + 'as'
  if (breed.endsWith('√≠')) return breed + 'es'
  if (breed.endsWith('z')) return breed.slice(0, -1) + 'ces'
  
  // Por defecto, agregar 's'
  return breed + 's'
}

// Funci√≥n de fallback para extraer palabras clave sin LLM
function extractKeywordsFromQuery(query: string, userPet?: any, conversationHistory?: any[]): LLMResponse {
  const lowerQuery = query.toLowerCase()
  
  // Detectar temas espec√≠ficos en la pregunta
  const queryAnalysis = {
    isAboutFood: lowerQuery.includes('come') || lowerQuery.includes('comida') || lowerQuery.includes('alimenta') || lowerQuery.includes('hambre') || lowerQuery.includes('pienso') || lowerQuery.includes('dieta'),
    isAboutBehavior: lowerQuery.includes('ladra') || lowerQuery.includes('ladrido') || lowerQuery.includes('comporta') || lowerQuery.includes('obedece') || lowerQuery.includes('agresiv') || lowerQuery.includes('destructiv'),
    isAboutSounds: lowerQuery.includes('maull') || lowerQuery.includes('ruido') || lowerQuery.includes('vocal') || lowerQuery.includes('grita') || lowerQuery.includes('chilla'),
    isAboutHealth: lowerQuery.includes('enferm') || lowerQuery.includes('dolor') || lowerQuery.includes('mal') || lowerQuery.includes('s√≠ntoma') || lowerQuery.includes('veterinario') || lowerQuery.includes('salud'),
    isAboutMood: lowerQuery.includes('triste') || lowerQuery.includes('deca√≠do') || lowerQuery.includes('deprim') || lowerQuery.includes('feliz') || lowerQuery.includes('alegr') || lowerQuery.includes('√°nimo'),
    isAboutExercise: lowerQuery.includes('ejercicio') || lowerQuery.includes('juega') || lowerQuery.includes('pasea') || lowerQuery.includes('corr') || lowerQuery.includes('actividad') || lowerQuery.includes('camina'),
    isAboutTraining: lowerQuery.includes('entrena') || lowerQuery.includes('ense√±a') || lowerQuery.includes('aprend') || lowerQuery.includes('comando') || lowerQuery.includes('obediencia'),
    isAboutLitterBox: lowerQuery.includes('caja de arena') || lowerQuery.includes('ba√±o') || lowerQuery.includes('orin') || lowerQuery.includes('hace pis') || lowerQuery.includes('accidente'),
    isAboutGrooming: lowerQuery.includes('pelo') || lowerQuery.includes('cepill') || lowerQuery.includes('ba√±a') || lowerQuery.includes('lava') || lowerQuery.includes('aseo') || lowerQuery.includes('limpia'),
    isAboutSleep: lowerQuery.includes('duerme') || lowerQuery.includes('sue√±o') || lowerQuery.includes('descanso') || lowerQuery.includes('cama') || lowerQuery.includes('noche')
  }
  
  // Determinar caracter√≠sticas y problemas basados en el an√°lisis
  const foundCharacteristics = []
  const foundIssues = []
  const foundTypes = []
  
  if (userPet) {
    // Formatear edad correctamente
    const age = userPet.edad
    const ageText = typeof age === 'number' 
      ? `${age} ${age === 1 ? 'a√±o' : 'a√±os'}`
      : age.toString().includes('a√±o') 
        ? age.toString()
        : `${age} ${age === '1' || age === 1 ? 'a√±o' : 'a√±os'}`
    
    foundCharacteristics.push(userPet.tipo, userPet.raza, ageText)
  }
  
  // Agregar issues espec√≠ficos basados en el an√°lisis
  if (queryAnalysis.isAboutFood) {
    foundIssues.push('alimentaci√≥n', 'dieta')
    foundTypes.push('nutrition')
  }
  if (queryAnalysis.isAboutBehavior) {
    foundIssues.push('comportamiento', 'entrenamiento')
    foundTypes.push('training')
  }
  if (queryAnalysis.isAboutSounds) {
    foundIssues.push('vocalizaci√≥n', 'comunicaci√≥n')
    foundTypes.push('training')
  }
  if (queryAnalysis.isAboutHealth) {
    foundIssues.push('salud', 'bienestar')
    foundTypes.push('wellness')
  }
  if (queryAnalysis.isAboutMood) {
    foundIssues.push('bienestar emocional')
    foundTypes.push('wellness')
  }
  if (queryAnalysis.isAboutExercise) {
    foundIssues.push('ejercicio', 'actividad f√≠sica')
    foundTypes.push('wellness')
  }
  if (queryAnalysis.isAboutTraining) {
    foundIssues.push('entrenamiento', 'obediencia')
    foundTypes.push('training')
  }
  
  // Detectar si tiene mascota registrada
  const hasRegisteredPet = !!userPet || (lowerQuery.includes('mi ') && (lowerQuery.includes('perro') || lowerQuery.includes('gato') || lowerQuery.includes('mascota')))
  
  // Generar respuesta ESPEC√çFICA y DIRECTA basada en el tema detectado
  let voiceMessage = ''
  let emotionalTone = 'curioso'
  
  if (hasRegisteredPet && userPet) {
    const petName = userPet.nombre
    const petType = userPet.tipo
    const petBreed = userPet.raza
    const petAge = typeof userPet.edad === 'number' 
      ? `${userPet.edad} ${userPet.edad === 1 ? 'a√±o' : 'a√±os'}`
      : userPet.edad.toString().includes('a√±o') 
        ? userPet.edad.toString()
        : `${userPet.edad} ${userPet.edad === '1' || userPet.edad === 1 ? 'a√±o' : 'a√±os'}`
    const petBreedPlural = getPetBreedPlural(petBreed, petType)
    
    // Respuestas espec√≠ficas y directas por tema
    if (queryAnalysis.isAboutFood) {
      emotionalTone = 'hambriento'
      voiceMessage = `¬°${petType === 'gato' ? 'Miau' : 'Guau'}! Soy ${petName} y veo que preguntas sobre mi alimentaci√≥n. üçΩÔ∏è Como ${petBreed} de ${petAge}, mi relaci√≥n con la comida puede tener varias explicaciones:\\n\\n‚Ä¢ **Si pido comida constantemente:** Puede ser que mis porciones actuales no sean suficientes para mi peso y edad, o que la calidad del alimento no me est√© saciando.\\n‚Ä¢ **Si rechazo la comida:** Podr√≠a ser aburrimiento con el sabor, problemas dentales, o incluso estr√©s.\\n‚Ä¢ **Si como muy r√°pido:** Es instinto de supervivencia, pero puedo necesitar un comedero especial.\\n\\n**Mi recomendaci√≥n espec√≠fica:** Revisa si mis porciones son correctas para ${petAge} y mi peso actual. Los ${petBreedPlural} tenemos necesidades nutricionales particulares. Si el problema persiste, una visita al veterinario ser√≠a ideal para descartar problemas de salud. üè•`
    } 
    else if (queryAnalysis.isAboutSounds && petType === 'gato') {
      emotionalTone = 'comunicativo'
      voiceMessage = `¬°Miau miau! Soy ${petName} y necesito explicarte mis vocalizaciones. üò∏ Como ${petBreed} de ${petAge}, cada maullido tiene un significado:\\n\\n‚Ä¢ **Maullidos cortos:** "¬°Hola!" o pido atenci√≥n\\n‚Ä¢ **Maullidos largos:** Tengo una necesidad urgente (hambre, ba√±o limpio)\\n‚Ä¢ **Maullidos por la noche:** Puede ser ansiedad, soledad, o rutina alterada\\n‚Ä¢ **Maullidos cerca de ti:** Quiero comunicarte algo espec√≠fico\\n\\n**Razones comunes a mi edad:** A ${petAge}, podr√≠a maullar m√°s por cambios en mi salud (hipotiroidismo, presi√≥n alta), dolor articular, o simplemente porque he aprendido que as√≠ consigo lo que quiero.\\n\\n**Qu√© puedes hacer:** Observa CU√ÅNDO maullo m√°s y QU√â consigo despu√©s. Si es por las noches, necesito m√°s estimulaci√≥n durante el d√≠a. üåô`
    }
    else if (queryAnalysis.isAboutBehavior && petType === 'perro') {
      emotionalTone = 'confundido'
      voiceMessage = `¬°Guau! Soy ${petName} y creo que mi comportamiento te est√° preocupando. üêï Como ${petBreed} de ${petAge}, mis acciones siempre tienen una raz√≥n:\\n\\n‚Ä¢ **Si ladro mucho:** Puede ser aburrimiento, ansiedad, territorialidad, o necesidad de atenci√≥n\\n‚Ä¢ **Si soy destructivo:** Falta de ejercicio mental y f√≠sico, ansiedad por separaci√≥n\\n‚Ä¢ **Si no obedezco:** Necesito refuerzo consistente del entrenamiento\\n\\n**Espec√≠fico para mi raza ${petBreed}:** Los ${petBreedPlural} tenemos caracter√≠sticas particulares de energ√≠a y necesidades mentales. A ${petAge}, mi nivel de actividad debe estar balanceado.\\n\\n**Plan de acci√≥n directo:** \\n1. Aumenta mi ejercicio diario (adaptado a mi edad)\\n2. Dame juguetes mentales\\n3. Refuerza comandos b√°sicos con premios\\n4. Mant√©n rutinas consistentes\\n\\n¬øCu√°l de estos comportamientos espec√≠ficos te preocupa m√°s? üéæ`
    }
    else if (queryAnalysis.isAboutHealth) {
      emotionalTone = 'preocupado'
      voiceMessage = `${petType === 'gato' ? 'Miau...' : 'Guau...'} Soy ${petName} y entiendo tu preocupaci√≥n por mi salud. üòü Como ${petBreed} de ${petAge}, es importante que sepas:\\n\\n**Se√±ales que requieren atenci√≥n veterinaria inmediata:**\\n‚Ä¢ Cambios en apetito o agua\\n‚Ä¢ Letargo inusual\\n‚Ä¢ V√≥mitos o diarrea persistente\\n‚Ä¢ Dificultad para respirar\\n‚Ä¢ Cambios en comportamiento s√∫bitos\\n\\n**A mi edad de ${petAge}:** Debo tener chequeos regulares cada 6-12 meses. Los ${petBreedPlural} pueden tener predisposiciones gen√©ticas espec√≠ficas que debemos monitorear.\\n\\n**Si notas algo espec√≠fico:** Anota cu√°ndo ocurre, frecuencia, y circunstancias. Esta informaci√≥n es invaluable para el veterinario.\\n\\n¬øHay alg√∫n s√≠ntoma espec√≠fico que has notado? Mi salud es prioridad y actuar r√°pido siempre es mejor. üè•üíï`
    }
    else if (queryAnalysis.isAboutExercise) {
      emotionalTone = 'emocionado'
      voiceMessage = `¬°${petType === 'gato' ? 'Miau' : 'Guau'} guau! Soy ${petName} ¬°y me ENCANTA hablar de ejercicio! üéæ Como ${petBreed} de ${petAge}, tengo necesidades espec√≠ficas:\\n\\n**Para mi raza ${petBreed}:**\\n‚Ä¢ Los ${petBreedPlural} tenemos un nivel de energ√≠a natural particular\\n‚Ä¢ Ejercicios que disfrutamos naturalmente\\n‚Ä¢ Consideraciones especiales por estructura f√≠sica\\n\\n**A mi edad de ${petAge}:**\\n‚Ä¢ ${typeof userPet.edad === 'number' && userPet.edad < 2 ? 'Necesito mucha energ√≠a pero cuidando mis articulaciones en crecimiento' : typeof userPet.edad === 'number' && userPet.edad < 7 ? 'Estoy en mi mejor momento f√≠sico' : 'Necesito ejercicio adaptado, menos intenso pero constante'}\\n\\n**Plan de ejercicio ideal:**\\n${petType === 'perro' ? '‚Ä¢ Caminatas diarias adaptadas a mi resistencia\\n‚Ä¢ Juegos de buscar y traer\\n‚Ä¢ Nataci√≥n si es posible (excelente para articulaciones)' : '‚Ä¢ Juguetes interactivos y de caza\\n‚Ä¢ Rascadores y estructuras para escalar\\n‚Ä¢ Sesiones de juego de 10-15 minutos varias veces al d√≠a'}\\n\\n¬øQuieres que planifiquemos una rutina espec√≠fica? ¬°Estoy listo para la aventura! üåü`
    }
         else if (queryAnalysis.isAboutTraining) {
       emotionalTone = 'listo para aprender'
       voiceMessage = `¬°${petType === 'gato' ? 'Miau' : 'Guau'}! Soy ${petName} y me emociona que hablemos sobre mi entrenamiento. üéì Como ${petBreed} de ${petAge}, tengo capacidades espec√≠ficas para aprender:\\n\\n**Para ${petType}s de mi raza:**\\n‚Ä¢ ${petType === 'perro' ? 'Los perros como yo aprendemos mejor con refuerzo positivo y rutinas consistentes' : 'Los gatos aprendemos a trav√©s de motivaci√≥n y respeto a nuestros instintos naturales'}\\n‚Ä¢ Mi edad de ${petAge} significa que ${typeof userPet.edad === 'number' && userPet.edad < 2 ? 'estoy en la etapa perfecta para aprender comandos b√°sicos' : typeof userPet.edad === 'number' && userPet.edad < 7 ? 'puedo aprender comandos complejos y trucos avanzados' : 'puedo seguir aprendiendo, aunque necesito m√°s paciencia'}\\n\\n**Comandos esenciales para empezar:**\\n${petType === 'perro' ? '‚Ä¢ "Sit" y "Stay" - fundamentales\\n‚Ä¢ "Come" - crucial para seguridad\\n‚Ä¢ "Down" - para relajaci√≥n\\n‚Ä¢ "Leave it" - muy importante' : '‚Ä¢ Responder al nombre\\n‚Ä¢ Venir cuando se llama\\n‚Ä¢ Usar el rascador\\n‚Ä¢ Respetar l√≠mites de espacios'}\\n\\n**Mi consejo:** Sesiones cortas (5-10 minutos), premios que realmente me motiven, y mucha paciencia. ¬°Estoy listo para aprender contigo! üìö`
     }
     else if (queryAnalysis.isAboutMood) {
       emotionalTone = 'reflexivo'
       voiceMessage = `${petType === 'gato' ? 'Miau...' : 'Guau...'} Soy ${petName} y quiero hablarte sobre c√≥mo me siento. üí≠ Como ${petBreed} de ${petAge}, mis emociones pueden cambiar por varias razones:\\n\\n**Si estoy triste o deca√≠do:**\\n‚Ä¢ Cambios en la rutina familiar\\n‚Ä¢ Menos tiempo contigo\\n‚Ä¢ Problemas de salud no detectados\\n‚Ä¢ Falta de estimulaci√≥n mental\\n‚Ä¢ Cambios de estaci√≥n o clima\\n\\n**Si estoy m√°s feliz o energ√©tico de lo normal:**\\n‚Ä¢ Nuevos est√≠mulos interesantes\\n‚Ä¢ M√°s atenci√≥n y juegos\\n‚Ä¢ Mejor alimentaci√≥n\\n‚Ä¢ Rutina de ejercicio adecuada\\n\\n**A mi edad espec√≠fica:** Los ${petType}s de ${petAge} ${typeof userPet.edad === 'number' && userPet.edad < 3 ? 'podemos tener cambios de humor por crecimiento y desarrollo' : typeof userPet.edad === 'number' && userPet.edad < 8 ? 'generalmente somos emocionalmente estables si nuestras necesidades est√°n cubiertas' : 'podemos necesitar m√°s cuidados especiales que afectan nuestro bienestar emocional'}.\\n\\n**Mi recomendaci√≥n:** Observa qu√© cambi√≥ en mi ambiente cuando notaste el cambio de humor. ¬°Y recuerda que a veces solo necesito m√°s mimos! ü§ó`
     }
     else if (queryAnalysis.isAboutLitterBox && petType === 'gato') {
       emotionalTone = 'culpable'
       voiceMessage = `Miau... Soy ${petName} y necesito explicarte sobre mis problemas con la caja de arena. üòø Como ${petBreed} de ${petAge}, esto es muy importante para m√≠:\\n\\n**Razones por las que podr√≠a evitar mi caja:**\\n‚Ä¢ Est√° muy sucia (los gatos somos muy limpios)\\n‚Ä¢ No me gusta el tipo de arena nuevo\\n‚Ä¢ La caja est√° en un lugar muy ruidoso o transitado\\n‚Ä¢ Tengo problemas de salud (infecci√≥n urinaria, dolor)\\n‚Ä¢ Estr√©s por cambios en casa\\n‚Ä¢ La caja es muy peque√±a para mi tama√±o\\n\\n**Reglas importantes de mi caja:**\\n‚Ä¢ L√≠mpiala diariamente (¬°es esencial!)\\n‚Ä¢ Una caja por gato + una extra\\n‚Ä¢ Arena sin perfumes fuertes\\n‚Ä¢ Ubicaci√≥n tranquila pero accesible\\n\\n**Si es urgente:** Si orino fuera de la caja con frecuencia, podr√≠a ser una infecci√≥n urinaria. ¬°Por favor ll√©vame al veterinario pronto! A mi edad, es importante descartar problemas m√©dicos. No lo hago para molestarte, ¬°prometo! üôè`
     }
    else {
      // Respuesta directa pidiendo especificidad 
      emotionalTone = 'curioso'
      voiceMessage = `¬°${petType === 'gato' ? 'Miau' : 'Guau'}! Soy ${petName}, tu ${petBreed} de ${petAge}. üêæ Veo que tienes una pregunta para m√≠, pero necesito que seas m√°s espec√≠fico para darte la mejor respuesta.\\n\\n**¬øTu pregunta es sobre:**\\n‚Ä¢ üçΩÔ∏è Mi alimentaci√≥n o h√°bitos de comida\\n‚Ä¢ üó£Ô∏è Mis vocalizaciones o ruidos\\n‚Ä¢ üéæ Ejercicio y actividades\\n‚Ä¢ üòî Mi estado de √°nimo o comportamiento\\n‚Ä¢ üè• Mi salud o s√≠ntomas f√≠sicos\\n‚Ä¢ üè† Problemas en casa (ba√±o, destructividad, etc.)\\n\\n**Como ${petBreed} de ${petAge},** tengo caracter√≠sticas espec√≠ficas de mi raza y edad que influyen en todo lo que hago. Cu√©ntame exactamente qu√© te preocupa y te dar√© una respuesta detallada y √∫til.\\n\\n¬°Estoy aqu√≠ para ayudarte a entenderme mejor! üíï`
    }
  } else {
    voiceMessage = "¬°Hola! üêæ Me encanta que quieras saber m√°s sobre el comportamiento de las mascotas. Para darte la mejor respuesta, ¬øpodr√≠as contarme m√°s detalles sobre tu pregunta espec√≠fica? Cada situaci√≥n es √∫nica y me gustar√≠a ayudarte de la manera m√°s precisa posible."
  }
  
  return {
    petCharacteristics: foundCharacteristics,
    issues: foundIssues,
    recommendationTypes: foundTypes.length > 0 ? foundTypes : ['wellness'],
    specificRecommendations: [],
    petVoiceResponse: {
      hasRegisteredPet: hasRegisteredPet,
      petName: userPet?.nombre || '',
      petBreed: userPet?.raza || '',
      voiceMessage: voiceMessage,
      emotionalTone: emotionalTone
    }
  }
}
