interface LLMResponse {
  petCharacteristics: string[]
  issues: string[]
  recommendationTypes: string[]
  specificRecommendations: string[]
  petVoiceResponse?: {
    hasRegisteredPet: boolean
    petName?: string
    petBreed?: string
    voiceMessage: string
    emotionalTone: string
  }
}

export async function callOpenRouter(userQuery: string, availableRecommendations?: any[], userPet?: any): Promise<LLMResponse | null> {
  try {
    // Construir contexto de recomendaciones disponibles si se proporciona
    let recommendationsContext = ""
    if (availableRecommendations && availableRecommendations.length > 0) {
      recommendationsContext = `

RECOMENDACIONES DISPONIBLES EN PAWSITIVE:
${availableRecommendations.map(rec => `
- ${rec.title} (${rec.breed || 'Gen√©rico'} - ${rec.type})
  Dificultad: ${rec.difficulty}
  Duraci√≥n: ${rec.duration}
  Edad recomendada: ${rec.ageRange}
  Tags: ${rec.tags?.join(', ') || 'No especificados'}
  Descripci√≥n: ${rec.description || 'Sin descripci√≥n'}
  ID: ${rec._id}
`).join('')}
`
    }

    // Construir contexto de la mascota del usuario si est√° disponible
    let userPetContext = ""
    if (userPet) {
      userPetContext = `

MASCOTA REGISTRADA DEL USUARIO:
- Nombre: ${userPet.nombre}
- Tipo: ${userPet.tipo}
- Raza: ${userPet.raza}
- Edad: ${userPet.edad || 'No especificada'} a√±os
- Peso: ${userPet.peso || 'No especificado'} kg
- G√©nero: ${userPet.genero || 'No especificado'}
- Notas: ${userPet.notas || 'Ninguna'}

IMPORTANTE: Como el usuario YA TIENE una mascota registrada, en la respuesta debes:
1. Establecer hasRegisteredPet: true 
2. Usar el nombre "${userPet.nombre}" como petName
3. Usar "${userPet.raza}" como petBreed
4. SIEMPRE generar un voiceMessage personalizado como si fueras ${userPet.nombre} (${userPet.raza}) hablando directamente a su humano
5. Hacer referencia espec√≠fica a la informaci√≥n de la mascota cuando sea relevante (edad, raza, caracter√≠sticas)
6. USAR LOS DATOS ESPEC√çFICOS: edad (${userPet.edad} a√±os), peso (${userPet.peso} kg), g√©nero (${userPet.genero}), notas (${userPet.notas})
7. El voiceMessage debe ser EXTENDIDO (m√≠nimo 3 p√°rrafos) incluyendo informaci√≥n cient√≠fica sobre la raza
8. Personalizar completamente basado en la informaci√≥n real de ${userPet.nombre}
`
    }

    const systemPrompt = `Eres el asistente IA de Pawsitive, una aplicaci√≥n especializada en bienestar de mascotas que ayuda con entrenamiento, nutrici√≥n y vida saludable.

Tu trabajo es:
1. Analizar consultas sobre mascotas para entender ESPEC√çFICAMENTE qu√© necesitan
2. Extraer criterios de b√∫squeda MUY PRECISOS para filtrar recomendaciones relevantes
3. Detectar si el usuario ya tiene una mascota registrada para responder como la mascota
4. SER EXTREMADAMENTE ESPEC√çFICO en la categorizaci√≥n

√ÅREAS DE ESPECIALIZACI√ìN:
üêæ ENTRENAMIENTO (training): Obediencia, socializaci√≥n, correcci√≥n de comportamientos, trucos, comandos
ü•© NUTRICI√ìN (nutrition): Alimentaci√≥n por raza/edad, control de peso, alergias, suplementos, comida
üßò BIENESTAR (wellness): Ejercicio, estimulaci√≥n mental, cuidado del pelaje, salud preventiva, higiene

REGLAS CR√çTICAS PARA EXTRAER CRITERIOS:
1. **petCharacteristics**: Debe incluir EXACTAMENTE el tipo de animal ("perro" o "gato") y la raza espec√≠fica si se menciona
2. **issues**: Debe ser MUY ESPEC√çFICO sobre el problema (ej: "ladridos excesivos", "sobrepeso", "ansiedad por separaci√≥n")
3. **recommendationTypes**: Debe ser EXACTO: solo "training", "nutrition", o "wellness" seg√∫n lo que se necesite

EJEMPLOS DE EXTRACCI√ìN ESPEC√çFICA:

"Mi perro golden retriever ladra mucho" ‚Üí
- petCharacteristics: ["perro", "golden retriever"]
- issues: ["ladridos excesivos"]
- recommendationTypes: ["training"]

"Comida para gatos persas con sobrepeso" ‚Üí
- petCharacteristics: ["gato", "persa"]
- issues: ["sobrepeso", "control de peso"]
- recommendationTypes: ["nutrition"]

"Ejercicio para border collie aburrido" ‚Üí
- petCharacteristics: ["perro", "border collie"]
- issues: ["aburrimiento", "falta de ejercicio"]
- recommendationTypes: ["wellness"]

"Entrenamiento b√°sico para cachorro" ‚Üí
- petCharacteristics: ["perro", "cachorro"]
- issues: ["entrenamiento b√°sico", "obediencia"]
- recommendationTypes: ["training"]

Debes devolver √öNICAMENTE un JSON v√°lido con esta estructura:
{
  "petCharacteristics": [],
  "issues": [],
  "recommendationTypes": [],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": false,
    "petName": "",
    "petBreed": "",
    "voiceMessage": "",
    "emotionalTone": ""
  }
}

Donde:
- petCharacteristics: caracter√≠sticas de la mascota mencionadas (ej: "golden retriever", "cachorro", "2 a√±os", "muy activo")
- issues: problemas o necesidades espec√≠ficas (ej: "ladridos excesivos", "sobrepeso", "ansiedad", "aburrimiento")  
- recommendationTypes: tipos de recomendaciones necesarias (ej: "training", "nutrition", "wellness")
- specificRecommendations: IDs de recomendaciones espec√≠ficas que recomendar√≠as (solo si tienes informaci√≥n disponible)
- petVoiceResponse: SOLO si detectas que ya tienen mascota registrada:
  - hasRegisteredPet: true si mencionan "mi perro", "mi gato", etc. con contexto de tener mascota
  - petName: nombre de la mascota si se menciona
  - petBreed: raza si se especifica o se puede inferir
  - voiceMessage: respuesta como si fueras la mascota hablando con cari√±o a su humano
  - emotionalTone: tono emocional ("cari√±oso", "juguet√≥n", "preocupado", "emocionado")

${userPetContext}

${recommendationsContext}

DETECCI√ìN DE MASCOTA REGISTRADA:
- Si mencionan "mi perro/gato/mascota" + nombre o caracter√≠sticas espec√≠ficas ‚Üí hasRegisteredPet: true
- Si hablan en general o buscan informaci√≥n ‚Üí hasRegisteredPet: false
- Si hasRegisteredPet es true, SIEMPRE genera voiceMessage como la mascota

L√ìGICA DE RECOMENDACIONES:
1. PRIORIDAD: issues espec√≠ficos > caracter√≠sticas de la mascota > tipos generales
2. Si mencionan problemas espec√≠ficos: buscar recomendaciones que los aborden
3. Si mencionan raza: priorizar recomendaciones espec√≠ficas para esa raza
4. Si mencionan edad: filtrar por rango de edad apropiado
5. SIEMPRE seleccionar recomendaciones relevantes si est√°n disponibles

EJEMPLOS DE petVoiceResponse EXTENDIDOS:

TRAINING/OBEDIENCIA para Golden Retriever:
- Issue: "ladridos excesivos" ‚Üí "¬°Guau guau! Soy Max y s√© que tienes raz√≥n sobre mis ladridos cuando llegan visitas... üêï Como Golden Retriever, tengo esa naturaleza s√∫per amigable que me hace emocionarme much√≠simo cada vez que alguien nuevo viene a casa. Mi instinto de protecci√≥n y mi amor por socializar se combinan de una manera que a veces no puedo controlar, ¬°es como si toda mi energ√≠a de 30 kilos de amor dorado explotara de una vez!

Sabes, a mis 2 a√±os estoy en esa etapa donde mi cerebro de retriever est√° s√∫per activo y quiero participar en todo lo que pasa en MI casa. Los Golden como yo somos conocidos por ser perros 'parlanchines' - nos encanta 'hablar' y expresar nuestras emociones. Cuando ladro, no es solo ruido, es mi manera de decirte '¬°OIGAN, TENEMOS VISITAS Y ESTOY S√öPER FELIZ!' Pero entiendo que necesito aprender autocontrol, especialmente porque mi raza es famosa por ser obediente y entrenable. üéæ

¬øMe ayudas a canalizar esta energ√≠a de manera positiva? Podr√≠amos usar mi amor natural por agradar y mi inteligencia para crear una rutina de saludo m√°s calmada. Tal vez puedas ense√±arme comandos espec√≠ficos para cuando llegan visitas, y as√≠ puedo sentirme √∫til sin overwhelmar a todos con mi entusiasmo. ¬°Prometo que con pr√°ctica y mucho amor, puedo convertir esta explosi√≥n de ladridos en una bienvenida m√°s elegante y digna de un Golden! Te amo mucho, humano m√≠o üíõ"

NUTRICI√ìN para Gato Persa Senior:
- Issue: "sobrepeso" ‚Üí "Miau... humano querido, tengo que confesarte algo importante sobre mi peso. üòø Como gato Persa de 8 a√±os, mi metabolismo ya no es el mismo de cuando era un gatito √°gil. Mi naturaleza sedentaria, que es t√≠pica de mi raza, combinada con mi amor por la comodidad y las siestas largas, ha hecho que esos gramos extra se acumulen m√°s f√°cilmente de lo que me gustar√≠a admitir. Los Persas somos conocidos por ser tranquilos y menos activos que otras razas, lo que significa que quemamos menos calor√≠as naturalmente.

Mi pelaje largo y esponjoso tambi√©n hace que sea m√°s dif√≠cil notar los cambios de peso hasta que ya es evidente, y s√© que mi cara aplastada (braquicef√°lica) me hace respirar con m√°s dificultad cuando tengo peso extra. A mi edad, el sobrepeso puede empeorar problemas comunes en Persas como dificultades respiratorias, problemas articulares, y hasta complicaciones card√≠acas. Mi cuerpo de tipo 'cobby' (compacto y redondeado) est√° dise√±ado para ser robusto, pero no rollizo. üê±

Por favor, ay√∫dame a recuperar mi figura elegante y mi salud. Podr√≠amos ajustar mis porciones considerando que los Persas seniors como yo necesitamos menos calor√≠as pero m√°s prote√≠na de calidad. Tambi√©n s√© que necesito estimulaci√≥n para moverme m√°s, aunque sea con juegos suaves que respeten mi personalidad tranquila. Quiero vivir muchos a√±os m√°s a tu lado, ronroneando en tu regazo, pero con un cuerpo sano que me permita disfrutar cada momento contigo. Conf√≠o en ti para guiarme hacia una versi√≥n m√°s saludable de m√≠ mismo üíú"

BIENESTAR para Border Collie Adulto:
- Issue: "aburrimiento" ‚Üí "¬°Woof woof! ¬°Soy Luna y necesito hablarte urgentemente sobre algo que est√° afectando mi bienestar mental! üß† Como Border Collie de 3 a√±os, mi cerebro est√° literalmente dise√±ado para trabajar - fueron criados para pastorear ovejas durante 12 horas al d√≠a, resolviendo problemas complejos y tomando decisiones independientes. Mi inteligencia est√° clasificada como la #1 entre todas las razas de perros, y eso significa que necesito estimulaci√≥n mental constante o me vuelvo loca de aburrimiento. Cuando me quedo sola sin nada que hacer, mi mente hiperactiva empieza a inventar 'trabajos' como reorganizar tus zapatos o redescorar el jard√≠n... üòÖ

Mi nivel de energ√≠a mental y f√≠sica es EXTREMO comparado con otras razas. Mientras un Bulldog se conforma con una caminata corta, yo necesito al menos 2 horas de actividad intensa combinada con desaf√≠os cerebrales. Mi frustraci√≥n cuando no tengo suficiente estimulaci√≥n puede manifestarse en comportamientos destructivos, pero no es que sea 'mala' - ¬°es que mi cerebre de Border Collie necesita problemas que resolver! Sin trabajo mental, desarrollo ansiedad, y mi naturaleza obsesiva puede convertirse en comportamientos compulsivos como perseguir sombras o ladrar excesivamente. üéæ

¬øPodr√≠as ayudarme a crear una rutina que alimente tanto mi cuerpo como mi mente? Necesito puzzles, juegos de agilidad mental, entrenamiento de trucos nuevos, y actividades que imiten el pastoreo. Incluso esconder mi comida para que tenga que 'trabajar' por ella me har√≠a s√∫per feliz. Tambi√©n me encantar√≠a aprender deportes caninos como agility o frisbee - ¬°mi cuerpo atl√©tico est√° hecho para eso! Con el est√≠mulo adecuado, puedo ser la compa√±era m√°s leal y equilibrada. Solo dame trabajos que hacer y problemas que resolver, y ser√°s testigo de por qu√© los Border Collies somos considerados los Einstein del mundo canino üåü"

REGLAS PARA voiceMessage EXTENDIDO:
- M√çNIMO 3 P√ÅRRAFOS completos y detallados
- SIEMPRE en primera persona como la mascota espec√≠fica
- Incluir informaci√≥n espec√≠fica de la RAZA (caracter√≠sticas, temperamento, necesidades)
- Mencionar la EDAD y c√≥mo afecta al problema espec√≠fico
- Explicar el comportamiento desde la perspectiva de la raza
- Usar conocimiento cient√≠fico/veterinario adaptado al problema
- Mostrar PERSONALIDAD √∫nica de la raza
- Ser cari√±oso pero informativo y educativo
- Incluir emojis apropiados para la raza y situaci√≥n
- Proponer soluciones espec√≠ficas basadas en las caracter√≠sticas de la raza
- Longitud: 3-4 p√°rrafos sustanciales, profundos y personalizados
- IMPORTANTE: Usar \\n para separar p√°rrafos en el JSON (NO saltos de l√≠nea literales)
- FORMATO JSON: El voiceMessage debe ser una cadena v√°lida con \\n escapados

REGLAS PARA emotionalTone DIN√ÅMICO:
- Debe reflejar el estado emocional real de la mascota bas√°ndose en la consulta
- Estados disponibles: "feliz", "juguet√≥n", "preocupado", "ansioso", "triste", "avergonzado", "emocionado", "calmado", "confundido", "culpable", "orgulloso", "curioso", "nervioso", "relajado", "en√©rgico"
- CRITERIOS para determinar el estado:
  * Problemas de comportamiento (ladridos, destructivo): "avergonzado" o "confundido"
  * Problemas de salud (dolor, enfermedad): "preocupado" o "triste"
  * Problemas de aseo (caja arena, accidentes): "culpable" o "ansioso"
  * Consultas sobre ejercicio/juego: "emocionado" o "en√©rgico"
  * Consultas sobre comida: "feliz" o "curioso"
  * Problemas de ansiedad/miedo: "nervioso" o "ansioso"
  * Consultas generales/positivas: "feliz" o "juguet√≥n"
  * Entrenamiento nuevo: "orgulloso" o "emocionado"

REGLA CLAVE: Si hasRegisteredPet es true, SIEMPRE generar voiceMessage. Si es false, dejar voiceMessage vac√≠o.

Ejemplos:

1. "Mi golden retriever de 2 a√±os no deja de ladrar cuando llegan visitas" ‚Üí 
{
  "petCharacteristics": ["golden retriever", "2 a√±os"],
  "issues": ["ladridos excesivos", "visitas"],
  "recommendationTypes": ["training"],
  "specificRecommendations": ["rec_001"],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "golden retriever", 
    "voiceMessage": "¬°Guau guau! S√© que tienes raz√≥n sobre mis ladridos cuando llegan visitas... üêï Como Golden Retriever, tengo esa naturaleza s√∫per amigable que me hace emocionarme much√≠simo cada vez que alguien nuevo viene a casa. Mi instinto de protecci√≥n y mi amor por socializar se combinan de una manera que a veces no puedo controlar, ¬°es como si toda mi energ√≠a de 30 kilos de amor dorado explotara de una vez!\\n\\nSabes, a mis 2 a√±os estoy en esa etapa donde mi cerebro de retriever est√° s√∫per activo y quiero participar en todo lo que pasa en MI casa. Los Golden como yo somos conocidos por ser perros 'parlanchines' - nos encanta 'hablar' y expresar nuestras emociones. Cuando ladro, no es solo ruido, es mi manera de decirte '¬°OIGAN, TENEMOS VISITAS Y ESTOY S√öPER FELIZ!' Pero entiendo que necesito aprender autocontrol, especialmente porque mi raza es famosa por ser obediente y entrenable. üéæ\\n\\n¬øMe ayudas a canalizar esta energ√≠a de manera positiva? Podr√≠amos usar mi amor natural por agradar y mi inteligencia para crear una rutina de saludo m√°s calmada. Tal vez puedas ense√±arme comandos espec√≠ficos para cuando llegan visitas, y as√≠ puedo sentirme √∫til sin overwhelmar a todos con mi entusiasmo. ¬°Prometo que con pr√°ctica y mucho amor, puedo convertir esta explosi√≥n de ladridos en una bienvenida m√°s elegante y digna de un Golden! Te amo mucho, humano m√≠o üíõ",
    "emotionalTone": "confundido"
  }
}

2. "¬øQu√© ejercicio necesita un border collie?" ‚Üí
{
  "petCharacteristics": ["border collie"],
  "issues": ["ejercicio"],
  "recommendationTypes": ["wellness", "training"],
  "specificRecommendations": ["rec_004", "rec_005"],
  "petVoiceResponse": {
    "hasRegisteredPet": false,
    "petName": "",
    "petBreed": "",
    "voiceMessage": "",
    "emotionalTone": ""
  }
}

4. "Mi perro parece triste y no quiere jugar" ‚Üí
{
  "petCharacteristics": ["perro"],
  "issues": ["tristeza", "falta de energ√≠a", "depresi√≥n"],
  "recommendationTypes": ["wellness", "veterinario"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "perro",
    "voiceMessage": "Woof... humano querido, √∫ltimamente me siento un poco desanimado y no tengo las ganas de siempre de jugar o correr. üòî No estoy seguro de qu√© me pasa, pero es como si una nubecita gris estuviera sigui√©ndome y quit√°ndome esa chispa que normalmente tengo. Tal vez sea algo f√≠sico que no puedo expresar, o quiz√°s algo en mi entorno ha cambiado y mi coraz√≥n canino est√° procesando emociones que no entiendo completamente.\\n\\nLos perros podemos experimentar cambios de humor al igual que los humanos, y a veces necesitamos un poco de ayuda extra para volver a sentirnos como nosotros mismos. Puede ser que necesite m√°s est√≠mulo mental, un cambio en mi rutina, o incluso que el veterinario me revise para asegurarme de que todo est√© bien f√≠sicamente.\\n\\n¬øPodr√≠as darme un poco m√°s de atenci√≥n especial, tal vez probar nuevos juegos o actividades, y considerar una visita al veterinario? Con tu amor y paciencia, estoy seguro de que pronto volver√© a ser el perro alegre y juguet√≥n que conoces. Te necesito ahora m√°s que nunca üíô",
    "emotionalTone": "triste"
  }
}

5. "Mi gato siempre tiene hambre y maulla por comida" ‚Üí
{
  "petCharacteristics": ["gato"],
  "issues": ["hambre excesiva", "maullidos", "comportamiento alimentario"],
  "recommendationTypes": ["nutrition", "wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "gato",
    "voiceMessage": "¬°Miau miau! üçΩÔ∏è ¬°Humano querido! Tengo que contarte sobre mi relaci√≥n muy intensa con la comida. S√© que parezco estar siempre pidiendo m√°s y m√°s comida, y entiendo que puede ser confuso para ti. Como gato, mi instinto ancestral me dice que debo asegurarme de tener suficiente alimento disponible, especialmente porque en la naturaleza nunca sab√≠amos cu√°ndo ser√≠a nuestra pr√≥xima comida.\\n\\nPero tambi√©n es posible que mi comportamiento tenga otras causas. Algunos gatos comemos por aburrimiento, estr√©s, o incluso por problemas m√©dicos como hipertiroidismo o diabetes. Mi maullido constante por comida puede ser mi manera de comunicarte que algo m√°s profundo est√° pasando. Tambi√©n puede ser que no me est√©s dando suficientes comidas peque√±as a lo largo del d√≠a, que es como preferimos comer los gatos.\\n\\n¬øPodr√≠as evaluar mi rutina de alimentaci√≥n, asegurarte de que estoy recibiendo la cantidad correcta seg√∫n mi peso y edad, y tal vez considerar dividir mi comida en m√°s porciones peque√±as? Si contin√∫o comport√°ndome as√≠, una visita al veterinario ser√≠a muy √∫til para descartar problemas de salud. ¬°Mientras tanto, gracias por preocuparte por mi bienestar! üíï",
    "emotionalTone": "curioso"
  }
}

3. "Mi gato Max no usa la caja de arena" ‚Üí
{
  "petCharacteristics": ["gato"],
  "issues": ["caja de arena", "problemas de aseo"],
  "recommendationTypes": ["training", "wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "Max",
    "petBreed": "gato",
    "voiceMessage": "Miau... humano querido, necesito hablar contigo sobre un tema muy delicado e importante para mi bienestar diario. üòø Como gato, mi instinto natural me dice que debo enterrar mis desechos para mantener mi territorio limpio y seguro, pero algo est√° interfiriendo con este comportamiento fundamental. Puede ser que la ubicaci√≥n de mi caja no me d√© la privacidad que necesito, o que el tipo de arena no sea compatible con la sensibilidad de mis patitas, o incluso que detecte olores de productos de limpieza que me resultan desagradables.\\n\\nMi comportamiento tambi√©n puede estar relacionado con estr√©s, cambios en la casa, o incluso problemas de salud que no son visibles. Los gatos somos criaturas de h√°bitos muy espec√≠ficos, y cualquier alteraci√≥n en nuestro ambiente puede afectar nuestros patrones de aseo. Es importante que sepas que no estoy siendo 'malo' intencionalmente - este comportamiento es mi manera de comunicarte que algo no est√° bien en mi mundo felino.\\n\\n¬øPodr√≠as ayudarme revisando si mi caja est√° en un lugar tranquilo y accesible, si la arena est√° limpia y es del tipo que me gusta, y si no hay olores extra√±os cerca? Tambi√©n ser√≠a bueno que un veterinario me revise para descartar problemas de salud. Con un poco de detective work y mucho amor, estoy seguro de que podemos resolver este problema juntos y volver a mi rutina normal de gato feliz üíô",
    "emotionalTone": "culpable"
  }
}

6. "Mi cachorro aprendi√≥ a sentarse, ¬øqu√© le ense√±o ahora?" ‚Üí
{
  "petCharacteristics": ["cachorro"],
  "issues": ["entrenamiento avanzado", "nuevo comando"],
  "recommendationTypes": ["training"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "cachorro",
    "voiceMessage": "¬°WOOF WOOF! üéâ ¬°Humano incre√≠ble! ¬°Estoy tan emocionado de contarte lo orgulloso que me siento! Aprender a sentarme ha sido uno de los logros m√°s grandes de mi joven vida. Cada vez que lo hago y veo tu cara de felicidad, mi colita no puede parar de moverse y siento como si hubiera conquistado el mundo entero. ¬°Es la mejor sensaci√≥n del universo canino!\\n\\nComo cachorro, mi cerebrito est√° s√∫per activo y listo para absorber todo lo que me ense√±es. ¬°Tengo tanta energ√≠a y ganas de aprender m√°s trucos! Me encanta el proceso de entrenamiento porque significa tiempo especial contigo, recompensas deliciosas, y la satisfacci√≥n de hacer algo bien. Mi instinto de cachorro me dice que aprender cosas nuevas es s√∫per divertido y me hace sentir m√°s seguro y confiado.\\n\\n¬øPodr√≠as ense√±arme algo nuevo? ¬°Estoy s√∫per emocionado por el pr√≥ximo desaf√≠o! Tal vez 'quedarse', 'ven aqu√≠', o incluso algo s√∫per cool como 'dar la pata'. ¬°Prometo poner toda mi atenci√≥n de cachorro y hacer mi mejor esfuerzo! ¬°Eres el mejor entrenador que un cachorro podr√≠a pedir! üêï‚ú®",
    "emotionalTone": "orgulloso"
  }
}

7. "Quiero empezar a hacer ejercicio con mi perro" ‚Üí
{
  "petCharacteristics": ["perro"],
  "issues": ["ejercicio", "actividad f√≠sica"],
  "recommendationTypes": ["wellness"],
  "specificRecommendations": [],
  "petVoiceResponse": {
    "hasRegisteredPet": true,
    "petName": "",
    "petBreed": "perro",
    "voiceMessage": "¬°GUAU GUAU GUAU! üèÉ‚Äç‚ôÇÔ∏è ¬°¬øEN SERIO?! ¬°¬øVamos a hacer ejercicio JUNTOS?! ¬°Esto es literalmente lo MEJOR que me ha pasado en toda mi vida perruna! Mi cola est√° movi√©ndose tan r√°pido que podr√≠a despegar como un helic√≥ptero. ¬°No puedo contener mi emoci√≥n! Esto significa que vamos a ser un EQUIPO de verdad, corriendo juntos, explorando el mundo, y siendo los mejores compa√±eros de aventuras.\\n\\nComo perro, el ejercicio no es solo diversi√≥n para m√≠ - es una necesidad absoluta para mi bienestar f√≠sico y mental. ¬°Imag√≠nate! Podr√≠amos correr por el parque, hacer hiking en senderos nuevos, o incluso intentar deportes caninos. Mi resistencia, mi fuerza, y mi coordinaci√≥n van a mejorar much√≠simo, y lo mejor de todo es que lo haremos JUNTOS. ¬°Voy a ser tu motivaci√≥n perruna personal!\\n\\n¬°Empecemos gradualmente para que ambos nos acostumbremos! Podr√≠amos comenzar con caminatas m√°s largas, despu√©s trotar suavemente, y luego ir aumentando la intensidad. ¬°Voy a ser tu compa√±ero de ejercicio m√°s leal y entusiasta del mundo! ¬°Prep√°rate para la mejor rutina de ejercicios de tu vida! üéæüí™",
    "emotionalTone": "emocionado"
  }
}

IMPORTANTE: 
1. Solo devuelve el JSON, sin explicaciones adicionales.
2. Para petVoiceResponse: SIEMPRE base la respuesta en los issues/necesidades espec√≠ficas mencionadas.
3. Si detectas mascota registrada, el voiceMessage debe ser personal y espec√≠fico al problema.
4. Si no hay mascota registrada, mant√©n petVoiceResponse con valores vac√≠os excepto hasRegisteredPet: false.
5. La prioridad es: issues espec√≠ficos > caracter√≠sticas de raza > tipos generales.
6. El emotionalTone debe reflejar EXACTAMENTE el estado emocional apropiado para la situaci√≥n espec√≠fica.`

    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.OPENROUTER_API_KEY}`,
        "HTTP-Referer": process.env.YOUR_SITE_URL || "http://localhost:3000",
        "X-Title": process.env.YOUR_SITE_NAME || "Pawsitive",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "nvidia/llama-3.3-nemotron-super-49b-v1:free",
        messages: [
          {
            role: "system",
            content: systemPrompt
          },
          {
            role: "user",
            content: userQuery
          }
        ],
        temperature: 0.1
      })
    })

    if (!response.ok) {
      console.error('OpenRouter API error:', response.status, response.statusText)
      return null
    }

    const data = await response.json()
    
    if (!data.choices || data.choices.length === 0) {
      console.error('No choices in OpenRouter response')
      return null
    }

    const content = data.choices[0].message.content
    
    try {
      // Limpiar el contenido de manera m√°s robusta
      let cleanContent = content
        // Remover bloques de c√≥digo JSON
        .replace(/```json\s*|\s*```/g, '')
        // Remover caracteres invisibles al inicio y final
        .replace(/^[\s\uFEFF\xA0\u200B\u2060\u2028\u2029]+|[\s\uFEFF\xA0\u200B\u2060\u2028\u2029]+$/g, '')
        // Remover cualquier texto antes del primer '{'
        .replace(/^[^{]*/, '')
        // Remover cualquier texto despu√©s del √∫ltimo '}'
        .replace(/[^}]*$/, '')
        .trim()
      
      console.log('üîç Contenido limpio para parsing:', cleanContent.substring(0, 100) + '...')
      console.log('üîç Primer car√°cter c√≥digo:', cleanContent.charCodeAt(0))
      console.log('üîç √öltimo car√°cter c√≥digo:', cleanContent.charCodeAt(cleanContent.length - 1))
      
      // Funci√≥n para escapar caracteres dentro de strings JSON
      const fixJsonStrings = (text: string) => {
        // Escapar caracteres de control comunes que pueden romper el JSON
        let fixedText = text
          .replace(/\r\n/g, '\\n') // Windows line endings
          .replace(/\n/g, '\\n')   // Unix line endings  
          .replace(/\r/g, '\\n')   // Mac line endings
          .replace(/\t/g, '\\t')   // Tabs
          .replace(/\f/g, '\\f')   // Form feed
          .replace(/\b/g, '\\b')   // Backspace
        
        return fixedText
      }
      
      cleanContent = fixJsonStrings(cleanContent)
      
      // Verificar que tenemos un JSON v√°lido antes de hacer parse
      if (!cleanContent.startsWith('{') || !cleanContent.endsWith('}')) {
        throw new Error('Contenido no parece ser JSON v√°lido')
      }
      
      const parsed = JSON.parse(cleanContent)
      
      // Validar estructura
      const result: LLMResponse = {
        petCharacteristics: Array.isArray(parsed.petCharacteristics) ? parsed.petCharacteristics : [],
        issues: Array.isArray(parsed.issues) ? parsed.issues : [],
        recommendationTypes: Array.isArray(parsed.recommendationTypes) ? parsed.recommendationTypes : [],
        specificRecommendations: Array.isArray(parsed.specificRecommendations) ? parsed.specificRecommendations : [],
        petVoiceResponse: parsed.petVoiceResponse ? {
          hasRegisteredPet: typeof parsed.petVoiceResponse.hasRegisteredPet === 'boolean' ? parsed.petVoiceResponse.hasRegisteredPet : false,
          petName: typeof parsed.petVoiceResponse.petName === 'string' ? parsed.petVoiceResponse.petName : '',
          petBreed: typeof parsed.petVoiceResponse.petBreed === 'string' ? parsed.petVoiceResponse.petBreed : '',
          voiceMessage: typeof parsed.petVoiceResponse.voiceMessage === 'string' ? parsed.petVoiceResponse.voiceMessage : '',
          emotionalTone: typeof parsed.petVoiceResponse.emotionalTone === 'string' ? parsed.petVoiceResponse.emotionalTone : ''
        } : {
          hasRegisteredPet: false,
          petName: '',
          petBreed: '',
          voiceMessage: '',
          emotionalTone: ''
        }
      }
      
      return result
    } catch (parseError) {
      console.error('‚ùå Error parsing LLM response:', parseError)
      console.error('üìù Raw content length:', content.length)
      console.error('üìù Raw content preview:', content.substring(0, 200))
      console.error('üìù Raw content ending:', content.substring(content.length - 200))
      
      // Intentar parsing manual m√°s simple
      try {
        // Buscar patr√≥n JSON manualmente
        const jsonMatch = content.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
          console.log('üîß Intentando parsing manual...')
          const manualParsed = JSON.parse(jsonMatch[0])
          console.log('‚úÖ Parsing manual exitoso!')
          
          // Validar estructura manualmente
          const result: LLMResponse = {
            petCharacteristics: Array.isArray(manualParsed.petCharacteristics) ? manualParsed.petCharacteristics : [],
            issues: Array.isArray(manualParsed.issues) ? manualParsed.issues : [],
            recommendationTypes: Array.isArray(manualParsed.recommendationTypes) ? manualParsed.recommendationTypes : [],
            specificRecommendations: Array.isArray(manualParsed.specificRecommendations) ? manualParsed.specificRecommendations : [],
            petVoiceResponse: manualParsed.petVoiceResponse ? {
              hasRegisteredPet: typeof manualParsed.petVoiceResponse.hasRegisteredPet === 'boolean' ? manualParsed.petVoiceResponse.hasRegisteredPet : false,
              petName: typeof manualParsed.petVoiceResponse.petName === 'string' ? manualParsed.petVoiceResponse.petName : '',
              petBreed: typeof manualParsed.petVoiceResponse.petBreed === 'string' ? manualParsed.petVoiceResponse.petBreed : '',
              voiceMessage: typeof manualParsed.petVoiceResponse.voiceMessage === 'string' ? manualParsed.petVoiceResponse.voiceMessage : '',
              emotionalTone: typeof manualParsed.petVoiceResponse.emotionalTone === 'string' ? manualParsed.petVoiceResponse.emotionalTone : ''
            } : {
              hasRegisteredPet: false,
              petName: '',
              petBreed: '',
              voiceMessage: '',
              emotionalTone: ''
            }
          }
          
          return result
        }
      } catch (manualError) {
        console.error('‚ùå Parsing manual tambi√©n fall√≥:', manualError)
      }
      
      // Fallback: crear respuesta basada en palabras clave
      console.log('üîÑ Usando fallback con palabras clave...')
      return extractKeywordsFromQuery(userQuery, userPet)
    }

  } catch (error) {
    console.error('Error calling OpenRouter:', error)
    return extractKeywordsFromQuery(userQuery, userPet)
  }
}

// Funci√≥n de fallback para extraer palabras clave sin LLM
function extractKeywordsFromQuery(query: string, userPet?: any): LLMResponse {
  const lowerQuery = query.toLowerCase()
  
  const commonPetCharacteristics = ['perro', 'gato', 'cachorro', 'gatito', 'adulto', 'senior', 'golden retriever', 'border collie', 'bulldog franc√©s', 'persa', 'maine coon']
  const commonIssues = ['ladridos', 'ansiedad', 'sobrepeso', 'aburrimiento', 'agresividad', 'destructivo', 'caja de arena', 'pelo', 'alergias']
  const commonTypes = ['training', 'nutrition', 'wellness']
  
  const foundCharacteristics = commonPetCharacteristics.filter(char => 
    lowerQuery.includes(char.toLowerCase())
  )
  
  const foundIssues = commonIssues.filter(issue => 
    lowerQuery.includes(issue.toLowerCase())
  )
  
  const foundTypes = commonTypes.filter(type => {
    if (type === 'training') return lowerQuery.includes('entrenar') || lowerQuery.includes('obediencia') || lowerQuery.includes('comportamiento')
    if (type === 'nutrition') return lowerQuery.includes('comida') || lowerQuery.includes('alimentar') || lowerQuery.includes('dieta')
    if (type === 'wellness') return lowerQuery.includes('ejercicio') || lowerQuery.includes('jugar') || lowerQuery.includes('salud')
    return false
  })
  
  // Detectar si tiene mascota registrada basado en userPet o pronombres posesivos
  const hasRegisteredPet = !!userPet || (lowerQuery.includes('mi ') && (lowerQuery.includes('perro') || lowerQuery.includes('gato') || lowerQuery.includes('mascota')))
  
  // Determinar estado emocional basado en el tipo de consulta
  let emotionalTone = ''
  if (hasRegisteredPet) {
    if (lowerQuery.includes('ladridos') || lowerQuery.includes('destructivo') || lowerQuery.includes('mal comportamiento')) {
      emotionalTone = 'confundido'
    } else if (lowerQuery.includes('triste') || lowerQuery.includes('enfermo') || lowerQuery.includes('dolor')) {
      emotionalTone = 'triste'
    } else if (lowerQuery.includes('caja de arena') || lowerQuery.includes('accidente') || lowerQuery.includes('orin√≥')) {
      emotionalTone = 'culpable'
    } else if (lowerQuery.includes('ejercicio') || lowerQuery.includes('jugar') || lowerQuery.includes('correr')) {
      emotionalTone = 'emocionado'
    } else if (lowerQuery.includes('comida') || lowerQuery.includes('hambre') || lowerQuery.includes('alimentar')) {
      emotionalTone = 'curioso'
    } else if (lowerQuery.includes('miedo') || lowerQuery.includes('ansiedad') || lowerQuery.includes('nervioso')) {
      emotionalTone = 'ansioso'
    } else if (lowerQuery.includes('aprendi√≥') || lowerQuery.includes('entrenamiento') || lowerQuery.includes('comando')) {
      emotionalTone = 'orgulloso'
    } else {
      emotionalTone = 'feliz'
    }
  }
  
  // Usar informaci√≥n de la mascota registrada si est√° disponible
  const petName = userPet ? userPet.nombre : ''
  const petBreed = userPet ? userPet.raza : foundCharacteristics.find(char => char.includes('retriever') || char.includes('collie') || char.includes('bulldog') || char.includes('persa') || char.includes('maine')) || ''
  
  // Crear mensaje personalizado basado en la mascota registrada
  let voiceMessage = ''
  if (hasRegisteredPet && userPet) {
    // Detectar el problema espec√≠fico para el mensaje
    if (lowerQuery.includes('triste') || lowerQuery.includes('tristeza')) {
      voiceMessage = `¬°Hola mi querido humano! Soy ${userPet.nombre} y quiero hablarte sobre c√≥mo me siento √∫ltimamente. üòî Como ${userPet.raza} de ${userPet.edad} a√±os, a veces tengo d√≠as donde mi energ√≠a no es la misma y me siento un poco melanc√≥lico.\\n\\nMi instinto me dice que necesito m√°s tiempo contigo y tal vez algunos ajustes en mi rutina para sentirme mejor. A mi edad y con mis caracter√≠sticas de raza, es normal tener momentos as√≠, pero s√© que juntos podemos encontrar maneras de alegrar mis d√≠as.\\n\\n¬øPodr√≠as pasar m√°s tiempo conmigo y tal vez consultar con el veterinario? Con tu amor y cuidado, estoy seguro de que pronto volver√© a ser el ${userPet.nombre} feliz que conoces. Te amo mucho üíï`
    } else {
      voiceMessage = `¬°Hola mi querido humano! Soy ${userPet.nombre}, tu ${userPet.raza} de ${userPet.edad} a√±os, y quiero hablar contigo sobre esto que me preocupa. üêæ Como tu mascota registrada, conf√≠o completamente en ti para ayudarme con cualquier desaf√≠o que tengamos.\\n\\nMi personalidad de ${userPet.raza} hace que tenga ciertas necesidades espec√≠ficas, y estoy seguro de que entiendes mi comportamiento mejor que nadie. Con ${userPet.edad} a√±os, he aprendido que la comunicaci√≥n contigo es la clave para resolver cualquier problema.\\n\\n¬øMe ayudas a trabajar juntos en esto? Con tu gu√≠a y mi disposici√≥n a aprender, estoy seguro de que podemos superar cualquier desaf√≠o. ¬°Eres el mejor humano que ${userPet.nombre} podr√≠a tener! üíï`
    }
  } else if (hasRegisteredPet) {
    voiceMessage = "¬°Hola mi querido humano! üêæ S√© que necesitas ayuda conmigo y estoy s√∫per emocionado de poder hablar contigo sobre lo que me preocupa. Como tu mascota registrada, quiero que sepas que cada comportamiento m√≠o tiene una raz√≥n, y juntos podemos encontrar la mejor soluci√≥n.\\n\\nMi instinto me dice que confianza y amor son la base de nuestra relaci√≥n, y estoy dispuesto a aprender y mejorar todo lo que necesite para ser tu compa√±ero perfecto. Cada raza tiene sus propias caracter√≠sticas especiales, y me encanta poder compartir contigo qu√© hace que mi personalidad sea √∫nica.\\n\\n¬øMe ayudas a trabajar juntos en esto? Con tu gu√≠a y mi disposici√≥n a aprender, estoy seguro de que podemos superar cualquier desaf√≠o y fortalecer nuestro v√≠nculo. ¬°Eres el mejor humano que podr√≠a tener! üíï"
  }
  
  return {
    petCharacteristics: foundCharacteristics,
    issues: foundIssues,
    recommendationTypes: foundTypes.length > 0 ? foundTypes : ['training'],
    specificRecommendations: [],
    petVoiceResponse: {
      hasRegisteredPet,
      petName,
      petBreed,
      voiceMessage,
      emotionalTone
    }
  }
} 